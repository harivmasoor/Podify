{"version":3,"file":"main.js","mappings":"qCAAA,IAAIA,EAAc,KAEX,SAASC,EAAYC,GAI1B,IAAIC,EAHJH,EAAcE,EAEME,SAASC,eAAe,eAEhCC,iBAAiB,SAAUC,IACrCC,aAAaL,GACbA,EAAQM,YAAW,KAMvB,IAAuBC,KALHH,EAAEI,OAAOC,QAa3BC,MAAO,uCAAsCH,+BAAoC,CAAEI,QALnE,CACdC,cAAgB,UAASf,IACzB,eAAgB,sBAIfgB,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACJ,MAAMC,EAAmBhB,SAASC,eAAe,iBACjD,IAAIgB,EAAc,GACdF,EAAKG,UAAYH,EAAKG,SAASC,MAAMC,SACvCH,GAAe,oBACfF,EAAKG,SAASC,MAAME,SAAQC,IAC1BL,GAAgB,MAAKK,EAAQC,UAAU,KAGvCR,EAAKS,QAAUT,EAAKS,OAAOL,MAAMC,SACnCH,GAAe,iBACfF,EAAKS,OAAOL,MAAME,SAAQI,IACxBR,GAAgB,MAAKQ,EAAMF,WAAWE,EAAMC,QAAQC,KAAIC,GAAUA,EAAOL,OAAMM,KAAK,WAAW,KAGnGb,EAAiBc,UAAYb,CAAW,IAEzCc,OAAMC,IACLC,QAAQD,MAAM,iCAAkCA,EAAM,GAjCzB,GAC5B,IAAI,GAEX,CCVA,MAEME,EAAclC,SAASC,eAAe,eAC5CiC,EAAYhC,iBAAiB,SAAS,KACpCiC,OAAOC,SAASC,KAAO,2CAA2C,IAGpEF,OAAOjC,iBAAiB,QAAQ,KAC9B,MAAMoC,EAAOH,OAAOC,SAASE,KAAKC,OAAO,GACnCC,EAAa,IAAIC,gBAAgBH,GAEvC,GAAIE,EAAWE,IAAI,gBAAiB,CAClCR,EAAYS,MAAMC,QAAU,OAE5B,MAAMhD,EAAc4C,EAAWK,IAAI,gBAC7BC,EAAYN,EAAWK,IAAI,cAC3BE,EAAYP,EAAWK,IAAI,cAEjCZ,QAAQe,IAAI,CACVC,aAAcrD,EACdsD,WAAYJ,EACZK,WAAYJ,IAQlB,SAAwBnD,GAMtBa,MAAM,gCAAiC,CAAEC,QALzB,CACdC,cAAgB,UAASf,IACzB,eAAgB,sBAIfgB,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IASV,IAAwBqC,IARDrC,EAAKsC,aASFrD,SAASC,eAAe,YAChCqD,YAAcF,CATF,IAEzBrB,OAAMC,IACLC,QAAQD,MAAM,+BAAgCA,EAAM,GAE1D,CApBIuB,CAAe3D,GACfC,EAAYD,EACd,I","sources":["webpack://podify/./src/searchBar.js","webpack://podify/./src/index.js"],"sourcesContent":["let accessToken = null;\n\nexport function setupSearch(accessTokenValue) {\n  accessToken = accessTokenValue;\n\n  const searchInput = document.getElementById('searchInput');\n  let timer;\n  searchInput.addEventListener('input', (e) => {\n    clearTimeout(timer);\n    timer = setTimeout(() => {\n      searchSpotify(e.target.value);\n    }, 500);  // Half a second delay to reduce the number of requests\n  });\n}\n\nfunction searchSpotify(query) {\n  if (!query) return;  // If the query is empty, don't make a request\n\n  const headers = {\n    Authorization: `Bearer ${accessToken}`,\n    'Content-Type': 'application/json',\n  };\n\n  fetch(`https://api.spotify.com/v1/search?q=${query}&type=podcast,track&limit=5`, { headers: headers })\n    .then(response => response.json())\n    .then(data => {\n      const resultsContainer = document.getElementById('searchResults');\n      let resultsHtml = '';\n      if (data.podcasts && data.podcasts.items.length) {\n        resultsHtml += '<h3>Podcasts</h3>';\n        data.podcasts.items.forEach(podcast => {\n          resultsHtml += `<p>${podcast.name}</p>`;\n        });\n      }\n      if (data.tracks && data.tracks.items.length) {\n        resultsHtml += '<h3>Songs</h3>';\n        data.tracks.items.forEach(track => {\n          resultsHtml += `<p>${track.name} by ${track.artists.map(artist => artist.name).join(', ')}</p>`;\n        });\n      }\n      resultsContainer.innerHTML = resultsHtml;\n    })\n    .catch(error => {\n      console.error('Error fetching search results:', error);\n    });\n}\n","import { setupSearch } from './searchBar.js';\n\n// Define your Spotify API Client ID\nconst clientId = '0cd96f761ce9434b9b4278b664d87591';\n\nconst loginButton = document.getElementById('loginButton');  // Reference to the login button\nloginButton.addEventListener('click', () => {\n  window.location.href = 'https://podify-backend.onrender.com/login';\n});\n\nwindow.addEventListener('load', () => {\n  const hash = window.location.hash.substr(1);\n  const hashParams = new URLSearchParams(hash);\n\n  if (hashParams.has('access_token')) {\n    loginButton.style.display = 'none';  // Hide the login button\n\n    const accessToken = hashParams.get('access_token');\n    const tokenType = hashParams.get('token_type');\n    const expiresIn = hashParams.get('expires_in');\n\n    console.log({\n      access_token: accessToken,\n      token_type: tokenType,\n      expires_in: expiresIn,\n    });\n\n    getUserProfile(accessToken);\n    setupSearch(accessToken);\n  }\n});\n\nfunction getUserProfile(accessToken) {\n  const headers = {\n    Authorization: `Bearer ${accessToken}`,\n    'Content-Type': 'application/json',\n  };\n\n  fetch('https://api.spotify.com/v1/me', { headers: headers })\n    .then(response => response.json())\n    .then(data => {\n      const username = data.display_name;\n      renderUsername(username);\n    })\n    .catch(error => {\n      console.error('Error fetching user profile:', error);\n    });\n}\n\nfunction renderUsername(username) {\n  const usernameElement = document.getElementById('username');\n  usernameElement.textContent = username;\n}\n\n"],"names":["accessToken","setupSearch","accessTokenValue","timer","document","getElementById","addEventListener","e","clearTimeout","setTimeout","query","target","value","fetch","headers","Authorization","then","response","json","data","resultsContainer","resultsHtml","podcasts","items","length","forEach","podcast","name","tracks","track","artists","map","artist","join","innerHTML","catch","error","console","loginButton","window","location","href","hash","substr","hashParams","URLSearchParams","has","style","display","get","tokenType","expiresIn","log","access_token","token_type","expires_in","username","display_name","textContent","getUserProfile"],"sourceRoot":""}