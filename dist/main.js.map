{"version":3,"file":"main.js","mappings":"qCAAA,IAAIA,EAAc,KAEX,SAASC,EAAYC,GAI1B,IAAIC,EAHJH,EAAcE,EAEME,SAASC,eAAe,eAEhCC,iBAAiB,SAAUC,IACrCC,aAAaL,GACbA,EAAQM,YAAW,MAiBvBC,eAA6BC,GAC3B,MAAMC,EAAkB,uCAAsCC,mBAAmBF,6BAC3EG,EAAU,CACd,cAAkB,UAASd,IAC3B,eAAgB,oBAGlB,IACE,IAAIe,QAAiBC,MAAMJ,EAAgB,CAAEE,QAASA,IAG9B,MAApBC,EAASE,eAtBjBP,iBACE,IACE,MAAMK,QAAiBC,MAAO,mEAAkEE,aAAaC,QAAQ,oBAC/GC,QAAaL,EAASM,OAC5BrB,EAAcoB,EAAKE,aACnBJ,aAAaK,QAAQ,eAAgBvB,EACvC,CAAE,MAAOwB,GACPC,QAAQD,MAAM,0BAA2BA,EAC3C,CACF,CAcYE,GACNX,QAAiBC,MAAMJ,EAAgB,CAAEE,QAASA,KAGpD,MAAMM,QAAaL,EAASM,OACtBM,EAAU,GAgBhB,OAdIP,EAAKQ,OAASR,EAAKQ,MAAMC,OAC3BF,EAAQG,QAAQV,EAAKQ,MAAMC,MAAME,KAAIC,IAAQ,CAC3CC,KAAM,OACNC,KAAMF,EAAKE,UAIXd,EAAKe,QAAUf,EAAKe,OAAON,OAC7BF,EAAQG,QAAQV,EAAKe,OAAON,MAAME,KAAIC,IAAQ,CAC5CC,KAAM,QACNC,KAAMF,EAAKE,UAIRP,CACT,CAAE,MAAOH,GAEP,OADAC,QAAQD,MAAM,2BAA4BA,GACnC,EACT,CACF,CAtDMY,CAAc7B,EAAE8B,OAAOC,MAAM,GAC5B,IAAI,GAEX,CCVA,MAEMC,EAAcnC,SAASC,eAAe,eAC5CkC,EAAYjC,iBAAiB,SAAS,KACpCkC,OAAOC,SAASC,KAAO,2CAA2C,IAGpEF,OAAOlC,iBAAiB,QAAQ,KAC9B,MAAMqC,EAAOH,OAAOC,SAASE,KAAKC,OAAO,GACnCC,EAAa,IAAIC,gBAAgBH,GAEvC,GAAIE,EAAWE,IAAI,gBAAiB,CAClCR,EAAYS,MAAMC,QAAU,OAE5B,MAAMjD,EAAc6C,EAAWK,IAAI,gBAC7BC,EAAYN,EAAWK,IAAI,cAC3BE,EAAYP,EAAWK,IAAI,cAEjCzB,QAAQ4B,IAAI,CACV/B,aAActB,EACdsD,WAAYH,EACZI,WAAYH,IAQlB,SAAwBpD,GAMtBgB,MAAM,gCAAiC,CAAEF,QALzB,CACd0C,cAAgB,UAASxD,IACzB,eAAgB,sBAIfyD,MAAK1C,GAAYA,EAASM,SAC1BoC,MAAKrC,IASV,IAAwBsC,IARDtC,EAAKuC,aASFvD,SAASC,eAAe,YAChCuD,YAAcF,CATF,IAEzBG,OAAMrC,IACLC,QAAQD,MAAM,+BAAgCA,EAAM,GAE1D,CApBIsC,CAAe9D,GACfC,EAAYD,EACd,I","sources":["webpack://podify/./src/searchBar.js","webpack://podify/./src/index.js"],"sourcesContent":["let accessToken = null;\n\nexport function setupSearch(accessTokenValue) {\n  accessToken = accessTokenValue;\n\n  const searchInput = document.getElementById('searchInput');\n  let timer;\n  searchInput.addEventListener('input', (e) => {\n    clearTimeout(timer);\n    timer = setTimeout(() => {\n      searchSpotify(e.target.value);\n    }, 500);  // Half a second delay to reduce the number of requests\n  });\n}\n\nasync function refreshToken() {\n  try {\n    const response = await fetch(`https://podify-backend.onrender.com/refresh_token?refresh_token=${localStorage.getItem('refresh_token')}`);\n    const data = await response.json();\n    accessToken = data.access_token;\n    localStorage.setItem('access_token', accessToken);\n  } catch (error) {\n    console.error('Error refreshing token:', error);\n  }\n}\n\nasync function searchSpotify(query) {\n  const searchEndpoint = `https://api.spotify.com/v1/search?q=${encodeURIComponent(query)}&type=show,track&limit=5`;\n  const headers = {\n    'Authorization': `Bearer ${accessToken}`,\n    'Content-Type': 'application/json',\n  };\n\n  try {\n    let response = await fetch(searchEndpoint, { headers: headers });\n    \n    // If token expired (status 401), refresh and retry\n    if (response.status === 401) {\n      await refreshToken();\n      response = await fetch(searchEndpoint, { headers: headers });\n    }\n\n    const data = await response.json();\n    const results = [];\n    \n    if (data.shows && data.shows.items) {\n      results.push(...data.shows.items.map(item => ({\n        type: 'show',\n        name: item.name,\n      })));\n    }\n    \n    if (data.tracks && data.tracks.items) {\n      results.push(...data.tracks.items.map(item => ({\n        type: 'track',\n        name: item.name,\n      })));\n    }\n    \n    return results;\n  } catch (error) {\n    console.error('Error searching Spotify:', error);\n    return [];\n  }\n}\n\n","import { setupSearch } from './searchBar.js';\n\n// Define your Spotify API Client ID\nconst clientId = '0cd96f761ce9434b9b4278b664d87591';\n\nconst loginButton = document.getElementById('loginButton');  // Reference to the login button\nloginButton.addEventListener('click', () => {\n  window.location.href = 'https://podify-backend.onrender.com/login';\n});\n\nwindow.addEventListener('load', () => {\n  const hash = window.location.hash.substr(1);\n  const hashParams = new URLSearchParams(hash);\n\n  if (hashParams.has('access_token')) {\n    loginButton.style.display = 'none';  // Hide the login button\n\n    const accessToken = hashParams.get('access_token');\n    const tokenType = hashParams.get('token_type');\n    const expiresIn = hashParams.get('expires_in');\n\n    console.log({\n      access_token: accessToken,\n      token_type: tokenType,\n      expires_in: expiresIn,\n    });\n\n    getUserProfile(accessToken);\n    setupSearch(accessToken);\n  }\n});\n\nfunction getUserProfile(accessToken) {\n  const headers = {\n    Authorization: `Bearer ${accessToken}`,\n    'Content-Type': 'application/json',\n  };\n\n  fetch('https://api.spotify.com/v1/me', { headers: headers })\n    .then(response => response.json())\n    .then(data => {\n      const username = data.display_name;\n      renderUsername(username);\n    })\n    .catch(error => {\n      console.error('Error fetching user profile:', error);\n    });\n}\n\nfunction renderUsername(username) {\n  const usernameElement = document.getElementById('username');\n  usernameElement.textContent = username;\n}\n\n"],"names":["accessToken","setupSearch","accessTokenValue","timer","document","getElementById","addEventListener","e","clearTimeout","setTimeout","async","query","searchEndpoint","encodeURIComponent","headers","response","fetch","status","localStorage","getItem","data","json","access_token","setItem","error","console","refreshToken","results","shows","items","push","map","item","type","name","tracks","searchSpotify","target","value","loginButton","window","location","href","hash","substr","hashParams","URLSearchParams","has","style","display","get","tokenType","expiresIn","log","token_type","expires_in","Authorization","then","username","display_name","textContent","catch","getUserProfile"],"sourceRoot":""}