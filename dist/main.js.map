{"version":3,"file":"main.js","mappings":"qCAAA,IAAIA,EAAc,KAEX,SAASC,EAAYC,GAI1B,IAAIC,EAHJH,EAAcE,EAEME,SAASC,eAAe,eAEhCC,iBAAiB,SAAUC,IACrCC,aAAaL,GACbA,EAAQM,YAAW,MAMvB,SAAuBC,EAAOV,GAC1B,MAAMW,EAAkB,uCAAsCC,mBAAmBF,6BAM1EG,MAAMF,EAAgB,CAAEG,QALf,CACZC,cAAgB,mBAChB,eAAgB,sBAIfC,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACF,MAAMC,EAAU,GAahB,OAZID,EAAKE,OAASF,EAAKE,MAAMC,OACzBF,EAAQG,QAAQJ,EAAKE,MAAMC,MAAME,KAAIC,IAAQ,CACzCC,KAAM,OACNC,KAAMF,EAAKE,UAGfR,EAAKS,QAAUT,EAAKS,OAAON,OAC3BF,EAAQG,QAAQJ,EAAKS,OAAON,MAAME,KAAIC,IAAQ,CAC1CC,KAAM,QACNC,KAAMF,EAAKE,UAGZP,CAAO,IAEjBS,OAAMC,IACHC,QAAQD,MAAM,2BAA4BA,GACnC,KAEnB,CAlCME,CAAczB,EAAE0B,OAAOC,MAAM,GAC5B,IAAI,GAEX,CCVA,MAEMC,EAAc/B,SAASC,eAAe,eAC5C8B,EAAY7B,iBAAiB,SAAS,KACpC8B,OAAOC,SAASC,KAAO,2CAA2C,IAGpEF,OAAO9B,iBAAiB,QAAQ,KAC9B,MAAMiC,EAAOH,OAAOC,SAASE,KAAKC,OAAO,GACnCC,EAAa,IAAIC,gBAAgBH,GAEvC,GAAIE,EAAWE,IAAI,gBAAiB,CAClCR,EAAYS,MAAMC,QAAU,OAE5B,MAAM7C,EAAcyC,EAAWK,IAAI,gBAC7BC,EAAYN,EAAWK,IAAI,cAC3BE,EAAYP,EAAWK,IAAI,cAEjCf,QAAQkB,IAAI,CACVC,aAAclD,EACdmD,WAAYJ,EACZK,WAAYJ,IAQlB,SAAwBhD,GAMtBa,MAAM,gCAAiC,CAAEC,QALzB,CACdC,cAAgB,UAASf,IACzB,eAAgB,sBAIfgB,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IASV,IAAwBkC,IARDlC,EAAKmC,aASFlD,SAASC,eAAe,YAChCkD,YAAcF,CATF,IAEzBxB,OAAMC,IACLC,QAAQD,MAAM,+BAAgCA,EAAM,GAE1D,CApBI0B,CAAexD,GACfC,EAAYD,EACd,I","sources":["webpack://podify/./src/searchBar.js","webpack://podify/./src/index.js"],"sourcesContent":["let accessToken = null;\n\nexport function setupSearch(accessTokenValue) {\n  accessToken = accessTokenValue;\n\n  const searchInput = document.getElementById('searchInput');\n  let timer;\n  searchInput.addEventListener('input', (e) => {\n    clearTimeout(timer);\n    timer = setTimeout(() => {\n      searchSpotify(e.target.value);\n    }, 500);  // Half a second delay to reduce the number of requests\n  });\n}\n\nfunction searchSpotify(query, accessToken) {\n    const searchEndpoint = `https://api.spotify.com/v1/search?q=${encodeURIComponent(query)}&type=show,track&limit=5`;\n    const headers = {\n        Authorization: `Bearer ${accessToken}`,\n        'Content-Type': 'application/json',\n    };\n\n    return fetch(searchEndpoint, { headers: headers })\n        .then(response => response.json())\n        .then(data => {\n            const results = [];\n            if (data.shows && data.shows.items) {\n                results.push(...data.shows.items.map(item => ({\n                    type: 'show',\n                    name: item.name,\n                })));\n            }\n            if (data.tracks && data.tracks.items) {\n                results.push(...data.tracks.items.map(item => ({\n                    type: 'track',\n                    name: item.name,\n                })));\n            }\n            return results;\n        })\n        .catch(error => {\n            console.error('Error searching Spotify:', error);\n            return [];\n        });\n}\n\n","import { setupSearch } from './searchBar.js';\n\n// Define your Spotify API Client ID\nconst clientId = '0cd96f761ce9434b9b4278b664d87591';\n\nconst loginButton = document.getElementById('loginButton');  // Reference to the login button\nloginButton.addEventListener('click', () => {\n  window.location.href = 'https://podify-backend.onrender.com/login';\n});\n\nwindow.addEventListener('load', () => {\n  const hash = window.location.hash.substr(1);\n  const hashParams = new URLSearchParams(hash);\n\n  if (hashParams.has('access_token')) {\n    loginButton.style.display = 'none';  // Hide the login button\n\n    const accessToken = hashParams.get('access_token');\n    const tokenType = hashParams.get('token_type');\n    const expiresIn = hashParams.get('expires_in');\n\n    console.log({\n      access_token: accessToken,\n      token_type: tokenType,\n      expires_in: expiresIn,\n    });\n\n    getUserProfile(accessToken);\n    setupSearch(accessToken);\n  }\n});\n\nfunction getUserProfile(accessToken) {\n  const headers = {\n    Authorization: `Bearer ${accessToken}`,\n    'Content-Type': 'application/json',\n  };\n\n  fetch('https://api.spotify.com/v1/me', { headers: headers })\n    .then(response => response.json())\n    .then(data => {\n      const username = data.display_name;\n      renderUsername(username);\n    })\n    .catch(error => {\n      console.error('Error fetching user profile:', error);\n    });\n}\n\nfunction renderUsername(username) {\n  const usernameElement = document.getElementById('username');\n  usernameElement.textContent = username;\n}\n\n"],"names":["accessToken","setupSearch","accessTokenValue","timer","document","getElementById","addEventListener","e","clearTimeout","setTimeout","query","searchEndpoint","encodeURIComponent","fetch","headers","Authorization","then","response","json","data","results","shows","items","push","map","item","type","name","tracks","catch","error","console","searchSpotify","target","value","loginButton","window","location","href","hash","substr","hashParams","URLSearchParams","has","style","display","get","tokenType","expiresIn","log","access_token","token_type","expires_in","username","display_name","textContent","getUserProfile"],"sourceRoot":""}