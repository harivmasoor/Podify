{"version":3,"file":"main.js","mappings":"AAKAA,SAASC,eAAe,eAAeC,iBAAiB,SAAS,KAE/D,MAAMC,EAAW,sHAAgGC,mBAL/F,0CAQlBC,OAAOC,SAASC,KAAOJ,CAAO,IAIhCE,OAAOH,iBAAiB,QAAQ,KAC9B,MAAMM,EAAOH,OAAOC,SAASE,KAAKC,OAAO,GACnCC,EAAa,IAAIC,gBAAgBH,GAEvC,GAAIE,EAAWE,IAAI,gBAAiB,CAElC,MAAMC,EAAcH,EAAWI,IAAI,gBAC7BC,EAAYL,EAAWI,IAAI,cAC3BE,EAAYN,EAAWI,IAAI,cAGjCG,QAAQC,IAAI,CACVC,aAAcN,EACdO,WAAYL,EACZM,WAAYL,IAYlB,SAAwBH,GAOtBS,MAAM,gCAAiC,CACrCC,QAPc,CACdC,cAAgB,UAASX,IACzB,eAAgB,sBAOfY,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IAaV,IAAwBC,IAXDD,EAAKE,aAYF9B,SAASC,eAAe,YAChC8B,YAAcF,CAVF,IAEzBG,OAAMC,IACLhB,QAAQgB,MAAM,+BAAgCA,EAAM,GAE1D,CA7BIC,CAAerB,EACjB,CAEE","sources":["webpack://podify/./src/index.js"],"sourcesContent":["// Define your Spotify API Client ID\nconst clientId = '0cd96f761ce9434b9b4278b664d87591';\nconst redirectUri = 'https://harivmasoor.github.io/Podify';\n\n// Handle the login button click event\ndocument.getElementById('loginButton').addEventListener('click', () => {\n  // Create the authorization URL\n  const authUrl = `https://accounts.spotify.com/authorize?client_id=${clientId}&response_type=token&redirect_uri=${encodeURIComponent(redirectUri)}`;\n\n  // Redirect the user to the authorization URL\n  window.location.href = authUrl;\n});\n\n// Process the redirected URL after the user logs in\nwindow.addEventListener('load', () => {\n  const hash = window.location.hash.substr(1);\n  const hashParams = new URLSearchParams(hash);\n\n  if (hashParams.has('access_token')) {\n    // Access token is present in the URL\n    const accessToken = hashParams.get('access_token');\n    const tokenType = hashParams.get('token_type');\n    const expiresIn = hashParams.get('expires_in');\n\n    // Output the access token and other details\n    console.log({\n      access_token: accessToken,\n      token_type: tokenType,\n      expires_in: expiresIn,\n    });\n\n    // Call additional functions or perform additional tasks here\n    getUserProfile(accessToken);\n  } else {\n    // Call additional functions or perform additional tasks here\n    // when the user is not logged in or access token is not present\n  }\n});\n\n// Function to fetch the user's profile information\nfunction getUserProfile(accessToken) {\n  const headers = {\n    Authorization: `Bearer ${accessToken}`,\n    'Content-Type': 'application/json',\n  };\n\n  // Make a GET request to the Spotify API\n  fetch('https://api.spotify.com/v1/me', {\n    headers: headers,\n  })\n    .then(response => response.json())\n    .then(data => {\n      // Extract the username from the response data\n      const username = data.display_name;\n\n      // Render the username on the webpage\n      renderUsername(username);\n    })\n    .catch(error => {\n      console.error('Error fetching user profile:', error);\n    });\n}\n\n// Function to render the username on the webpage\nfunction renderUsername(username) {\n  const usernameElement = document.getElementById('username');\n  usernameElement.textContent = username;\n}\n"],"names":["document","getElementById","addEventListener","authUrl","encodeURIComponent","window","location","href","hash","substr","hashParams","URLSearchParams","has","accessToken","get","tokenType","expiresIn","console","log","access_token","token_type","expires_in","fetch","headers","Authorization","then","response","json","data","username","display_name","textContent","catch","error","getUserProfile"],"sourceRoot":""}