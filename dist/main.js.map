{"version":3,"file":"main.js","mappings":"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","sources":["webpack://podify/./src/searchBar.js","webpack://podify/./src/webPlayer.js","webpack://podify/./src/index.js"],"sourcesContent":["let accessToken = null;\n\nexport function setupSearch(accessTokenValue) {\n  accessToken = accessTokenValue;\n\n  const searchInput = document.getElementById('searchInput');\n  const searchResults = document.getElementById('searchResults');\n  let timer;\n  searchInput.addEventListener('input', (e) => {\n    if (e.target.value) {\n      searchResults.style.border = '1px solid #ccc';  // Add border\n  } else {\n      searchResults.style.border = 'none';  // Remove border\n  }\n    clearTimeout(timer);\n    timer = setTimeout(() => {\n      searchSpotify(e.target.value);\n    }, 500);  // Half a second delay to reduce the number of requests\n  });\n}\n\nasync function refreshToken() {\n  try {\n    const response = await fetch(`https://podify-backend.onrender.com/refresh_token?refresh_token=${localStorage.getItem('refresh_token')}`);\n    const data = await response.json();\n    accessToken = data.access_token;\n    localStorage.setItem('access_token', accessToken);\n  } catch (error) {\n    console.error('Error refreshing token:', error);\n  }\n}\n\nasync function searchSpotify(query) {\n  const searchEndpoint = `https://api.spotify.com/v1/search?q=${encodeURIComponent(query)}&type=show,episode,track&limit=5`;\n  const headers = {\n    'Authorization': `Bearer ${accessToken}`,\n    'Content-Type': 'application/json',\n  };\n\n  try {\n    let response = await fetch(searchEndpoint, { headers: headers });\n    \n    // If token expired (status 401), refresh and retry\n    if (response.status === 401) {\n      await refreshToken();\n      response = await fetch(searchEndpoint, { headers: headers });\n    }\n\n    const data = await response.json();\n    const results = [];\n    \n    if (data.shows && data.shows.items) {\n      results.push(...data.shows.items.map(item => ({\n        type: 'show',\n        id: item.id,  // Include the ID\n        name: item.name,\n    })));\n    }\n    \n    if (data.tracks && data.tracks.items) {\n      results.push(...data.tracks.items.map(item => ({\n        type: 'track',\n        id: item.id,  // Include the ID\n        name: item.name,\n      })));\n    }\n    if (data.episodes && data.episodes.items) {\n      results.push(...data.episodes.items.map(item => ({\n        type: 'episode',\n        id: item.id,  // Include the ID\n        name: item.name,\n      })));\n    }\n\n    // Call the displayResults function with the search results\n    displayResults(results);\n    \n    return results;\n  } catch (error) {\n    console.error('Error searching Spotify:', error);\n    return [];\n  }\n}\n\nfunction displayResults(results) {\n  const resultsContainer = document.getElementById('searchResults');\n  resultsContainer.innerHTML = '';  // Clear previous results\n\n  results.forEach(result => {\n      const resultElement = document.createElement('div');\n      resultElement.className = 'resultItem';\n      resultElement.dataset.id = result.id;  // Add this line to store the Spotify ID on the element\n      resultElement.dataset.type = result.type;  // And this one to store the type (track or show)\n      resultElement.innerHTML = `<strong>${result.type}:</strong> ${result.name}`;\n      resultsContainer.appendChild(resultElement);\n  });\n}\n\n\n\n","let currentAccessToken = null;\n\nexport function setupWebPlayer(accessToken) {\n    currentAccessToken = accessToken;\n\n    const searchResults = document.getElementById('searchResults');\n    searchResults.addEventListener('click', (e) => {\n        if (e.target.classList.contains('resultItem')) {\n            playItem(e.target.dataset.id, e.target.dataset.type);\n        }\n    });\n}\n\nasync function playItem(itemId, itemType) {\n    const endpoint = `https://api.spotify.com/v1/me/player/play`;\n    const headers = {\n        'Authorization': `Bearer ${currentAccessToken}`,\n        'Content-Type': 'application/json',\n    };\n    const body = {\n        context_uri: `spotify:${itemType}:${itemId}`,\n    };\n\n    try {\n        const response = await fetch(endpoint, {\n            method: 'PUT',\n            headers: headers,\n            body: JSON.stringify(body),\n        });\n\n        if (!response.ok) {\n            throw new Error(`Unable to play ${itemType}: ${response.statusText}`);\n        }\n\n        console.log(`Successfully started playing ${itemType} with ID: ${itemId}`);\n    } catch (error) {\n        console.error('Error in web player:', error);\n    }\n}\n","import { setupSearch } from './searchBar.js';\nimport { setupWebPlayer } from './webPlayer.js';\n\nconst loginButton = document.getElementById('loginButton');  // Reference to the login button\nloginButton.addEventListener('click', () => {\n    window.location.href = 'https://podify-backend.onrender.com/login';\n});\n\nlet accessToken; // Move the declaration of accessToken to a higher scope\n\nwindow.addEventListener('load', () => {\n    const hash = window.location.hash.substring(1);\n    const hashParams = new URLSearchParams(hash);\n\n    if (hashParams.has('access_token')) {\n        loginButton.style.display = 'none';  // Hide the login button\n\n        accessToken = hashParams.get('access_token'); // Use the higher scoped accessToken\n        const tokenType = hashParams.get('token_type');\n        const expiresIn = hashParams.get('expires_in');\n        const searchContainer = document.getElementById('search-container');\n        searchContainer.style.display = 'block';\n\n        console.log({\n            access_token: accessToken,\n            token_type: tokenType,\n            expires_in: expiresIn,\n        });\n\n        getUserProfile(accessToken);\n        setupSearch(accessToken);\n        const searchInput = document.getElementById('searchInput');\n        searchInput.style.display = 'block'; // Show the search input\n        \n        const searchResults = document.getElementById('searchResults');\n        searchInput.addEventListener('input', () => {\n            if (searchInput.value.length > 0) {\n                searchResults.style.display = 'block';  // Show the searchResults if there's content\n            } else {\n                searchResults.style.display = 'none';   // Hide the searchResults if there's no content\n            }\n        });\n        setupWebPlayer(accessToken);    \n    }\n});\n\nfunction getUserProfile(token) {\n    const headers = {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json',\n    };\n\n    fetch('https://api.spotify.com/v1/me', { headers: headers })\n        .then(response => response.json())\n        .then(data => {\n            const username = data.display_name;\n            renderUsername(username);\n        })\n        .catch(error => {\n            console.error('Error fetching user profile:', error);\n        });\n}\n\nvar player;  // Declare the player variable at a scope accessible by all your functions\n\nwindow.onSpotifyWebPlaybackSDKReady = () => {\n    player = new Spotify.Player({\n        name: 'Your Web Player Name',\n        getOAuthToken: callback => {\n            callback(accessToken);  // Use the higher scoped accessToken\n        }\n    });\n\n    player.addListener('player_state_changed', state => {\n        console.log(state);\n        isPlaying = !state.paused;\n        if (isPlaying) {\n            document.getElementById('playPause').textContent = '⏸️';\n        } else {\n            document.getElementById('playPause').textContent = '▶️';\n        }\n    });\n\n    player.connect();\n};\n\nfunction renderUsername(username) {\n    const usernameElement = document.getElementById('username');\n    usernameElement.textContent = username;\n}\n\ndocument.getElementById('searchInput').addEventListener('focus', (event) => {\n    event.preventDefault();\n});\n\ndocument.getElementById('playPause').addEventListener('click', togglePlay);\ndocument.getElementById('rewind').addEventListener('click', rewindTrack);\ndocument.getElementById('fastForward').addEventListener('click', fastForwardTrack);\n\nlet isPlaying = false;  // To track playback state\n\nfunction togglePlay() {\n    if (isPlaying) {\n        player.pause().then(() => {\n            console.log('Paused Playback');\n            isPlaying = false;\n            document.getElementById('playPause').textContent = '▶️';\n        });\n    } else {\n        player.resume().then(() => {\n            console.log('Resumed Playback');\n            isPlaying = true;\n            document.getElementById('playPause').textContent = '⏸️';\n        });\n    }\n}\n\nfunction rewindTrack() {\n    player.seek(player.getCurrentState().position - 15000);  // rewinds 15 seconds\n}\n\nfunction fastForwardTrack() {\n    player.seek(player.getCurrentState().position + 15000);  // fast forwards 15 seconds\n}\n\ndocument.getElementById('webPlayer').style.display = 'block';\n\n\n\n"],"names":["accessToken","currentAccessToken","loginButton","document","getElementById","player","addEventListener","window","location","href","hash","substring","hashParams","URLSearchParams","has","style","display","get","tokenType","expiresIn","console","log","access_token","token_type","expires_in","fetch","headers","Authorization","then","response","json","data","username","display_name","textContent","catch","error","accessTokenValue","searchInput","searchResults","timer","e","target","value","border","clearTimeout","setTimeout","async","query","searchEndpoint","encodeURIComponent","status","localStorage","getItem","setItem","refreshToken","results","shows","items","push","map","item","type","id","name","tracks","episodes","resultsContainer","innerHTML","forEach","result","resultElement","createElement","className","dataset","appendChild","displayResults","searchSpotify","setupSearch","length","classList","contains","itemId","itemType","body","context_uri","method","JSON","stringify","ok","Error","statusText","playItem","setupWebPlayer","onSpotifyWebPlaybackSDKReady","Spotify","Player","getOAuthToken","callback","addListener","state","isPlaying","paused","connect","event","preventDefault","pause","resume","seek","getCurrentState","position"],"sourceRoot":""}